---

- name: Add group | create primary group before adding user to group
  group:
    name: "{{ vaultwarden_group_name }}"
    state: present

- name: Add users | create users, shell, home dirs
  user:
    name: "{{ vaultwarden_user_name }}"
    group: "{{ vaultwarden_group_name }}"
    createhome: no
    system: yes
    state: present 

- name: ensure vaultwarden dirs exist
  file:
    path: "{{ item }}"
    owner: "{{ vaultwarden_user_name }}"
    group: "{{ vaultwarden_group_name }}"
    mode: "0700"
    state: directory
  loop: 
    - "{{ vaultwarden_base_path }}"
    - "{{ vaultwarden_data_path }}"
    - "{{ vaultwarden_backup_path }}"    

- name: Ensure vaultwarden container running
  docker_container:
    name: vaultwarden
    image: "{{ vaultwarden_image }}"
    state: started
    recreate: yes
    restart_policy: always
    ports:
     - "{{ vaultwarden_port }}"
    volumes:
     - "{{ vaultwarden_data_path }}:/data"
    env:
      YUBICO_CLIENT_ID: "{{ VAULTWARDEN_YUBICO_CLIENT_ID }}"
      YUBICO_SECRET_KEY: "{{ VAULTWARDEN_YUBICO_SECRET_KEY }}"

- name: drop vaultwarden nginx server config
  ansible.builtin.template:
    src: "vaultwarden-nginx.j2"
    dest: "/etc/nginx/conf.d/vaultwarden.conf"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: "0744"
  notify: reload nginx

- name: ensure postfix installed for alerts
  package:
    name: postfix

- name: ensure mail package installed for alerts
  package:
    name: "{{ 'mailutils' if ansible_distribution == 'Debian' else 's-nail' }}"

- name: drop script that creats daily backup of vaultwarden
  ansible.builtin.template:
    src: "vaultwarden-backup.sh"
    dest: "/etc/cron.daily/vaultwarden-backup.sh"
    owner: root
    group: root
    mode: "0744"

- name: Ensure a job that runs at 6am to take daily backups of vaultwarden exists
  ansible.builtin.cron:
    name: "check dirs"
    minute: "0"
    hour: "6"
    job: "/etc/cron.daily/vaultwarden-backup.sh"
